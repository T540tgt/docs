"use strict";(self.webpackChunkdocs_oasis_io=self.webpackChunkdocs_oasis_io||[]).push([[1353],{3688:(e,o,t)=>{t.r(o),t.d(o,{assets:()=>r,contentTitle:()=>s,default:()=>p,frontMatter:()=>i,metadata:()=>a,toc:()=>c});var n=t(4848),l=t(8453);const i={},s="Ballot Contract",a={id:"dapp/opl/enclave",title:"Ballot Contract",description:"Next, we will write a smart contract that holds private data. This smart",source:"@site/docs/dapp/opl/enclave.md",sourceDirName:"dapp/opl",slug:"/dapp/opl/enclave",permalink:"/dapp/opl/enclave",draft:!1,unlisted:!1,editUrl:"https://github.com/oasisprotocol/docs/edit/main/docs/dapp/opl/enclave.md",tags:[],version:"current",lastUpdatedAt:1723018842e3,frontMatter:{},sidebar:"developers",previous:{title:"DAO Contract",permalink:"/dapp/opl/host"},next:{title:"Build",permalink:"/dapp/opl/build"}},r={},c=[{value:"Autoswitch",id:"autoswitch",level:4},{value:"Event",id:"event",level:4},{value:"Private",id:"private",level:4}];function d(e){const o={admonition:"admonition",code:"code",em:"em",h1:"h1",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,l.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(o.h1,{id:"ballot-contract",children:"Ballot Contract"}),"\n",(0,n.jsxs)(o.p,{children:["Next, we will write a smart contract that holds private data. This smart\ncontract will run inside a trusted execution environment (TEE) on the Oasis\nSapphire ParaTime, which why we refer to these as an ",(0,n.jsx)(o.em,{children:"enclave"})," smart contract."]}),"\n",(0,n.jsxs)(o.p,{children:["Create a new Solidity contract named ",(0,n.jsx)(o.code,{children:"BallotBoxV1.sol"}),"."]}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-solidity",children:'// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {Enclave, Result, autoswitch} from "@oasisprotocol/sapphire-contracts/contracts/OPL.sol";\n\nerror NotActive();\n\ntype ProposalId is bytes32;\n\nstruct ProposalParams {\n    string ipfsHash;\n    uint16 numChoices;\n    bool publishVotes;\n}\n\ncontract BallotBoxV1 is Enclave {\n    error NotPublishingVotes();\n    error AlreadyVoted();\n    error UnknownChoice();\n\n    struct Ballot {\n        bool active;\n        ProposalParams params;\n        /// voter -> choice id\n        mapping(address => Choice) votes;\n        /// choice id -> vote\n        uint256[32] voteCounts;\n    }\n\n    struct Choice {\n        bool exists;\n        uint8 choice;\n    }\n\n    event BallotClosed(ProposalId indexed id, uint256 topChoice);\n\n    mapping(ProposalId => Ballot) private _ballots;\n\n    constructor(address dao) Enclave(dao, autoswitch("bsc")) {\n        registerEndpoint("createBallot", _oplCreateBallot);\n    }\n\n    function castVote(\n        ProposalId proposalId,\n        uint256 choiceIdBig\n    ) external payable {\n        Ballot storage ballot = _ballots[proposalId];\n        if (!ballot.active) revert NotActive();\n        uint8 choiceId = uint8(choiceIdBig & 0xff);\n        if (choiceId >= ballot.params.numChoices) revert UnknownChoice();\n        Choice memory existingVote = ballot.votes[_msgSender()];\n        // 1 click 1 vote\n        for (uint256 i; i < ballot.params.numChoices; ++i) {\n            // read-modify-write all counts to make it harder to determine which one is chosen.\n            ballot.voteCounts[i] ^= 1 << 255; // flip the top bit to constify gas usage a bit\n            // Arithmetic is not guaranteed to be constant time, so this might still leak the choice to a highly motivated observer.\n            ballot.voteCounts[i] += i == choiceId ? 1 : 0;\n            ballot.voteCounts[i] -= existingVote.exists && existingVote.choice == i\n                ? 1\n                : 0;\n        }\n        ballot.votes[_msgSender()].exists = true;\n        ballot.votes[_msgSender()].choice = choiceId;\n    }\n\n    function closeBallot(ProposalId proposalId) external payable {\n        Ballot storage ballot = _ballots[proposalId];\n        if (!ballot.active) revert NotActive();\n        _closeBallot(proposalId, ballot);\n    }\n\n    function getVoteOf(ProposalId proposalId, address voter) external view returns (Choice memory) {\n        Ballot storage ballot = _ballots[proposalId];\n        if (voter == msg.sender) return ballot.votes[msg.sender];\n        if (!ballot.params.publishVotes) revert NotPublishingVotes();\n        return ballot.votes[voter];\n    }\n\n    function ballotIsActive(ProposalId id) external view returns (bool) {\n        return _ballots[id].active;\n    }\n\n    function _oplCreateBallot(bytes calldata args) internal returns (Result) {\n        (ProposalId id, ProposalParams memory params) = abi.decode(\n            args,\n            (ProposalId, ProposalParams)\n        );\n        Ballot storage ballot = _ballots[id];\n        ballot.params = params;\n        ballot.active = true;\n        for (uint256 i; i < params.numChoices; ++i) ballot.voteCounts[i] = 1 << 255; // gas usage side-channel resistance.\n        return Result.Success;\n    }\n\n    function _closeBallot(ProposalId _proposalId, Ballot storage _ballot) internal {\n        uint256 topChoice;\n        uint256 topChoiceCount;\n        for (uint8 i; i < _ballot.params.numChoices; ++i) {\n            uint256 choiceVoteCount = _ballot.voteCounts[i] & (type(uint256).max >> 1);\n            if (choiceVoteCount > topChoiceCount) {\n                topChoice = i;\n                topChoiceCount = choiceVoteCount;\n            }\n        }\n        postMessage("ballotClosed", abi.encode(_proposalId, topChoice));\n        emit BallotClosed(_proposalId, topChoice);\n        delete _ballots[_proposalId];\n    }\n}\n'})}),"\n",(0,n.jsx)(o.h4,{id:"autoswitch",children:"Autoswitch"}),"\n",(0,n.jsxs)(o.p,{children:["In this tutorial, the ",(0,n.jsx)(o.em,{children:"enclave"})," smart contract will talk to the ",(0,n.jsx)(o.em,{children:"host"})," smart\ncontract deployed on the Binance Smart Chain (",(0,n.jsx)(o.code,{children:"bsc"}),")."]}),"\n",(0,n.jsx)(o.admonition,{type:"tip",children:(0,n.jsx)(o.p,{children:"Autoswitch will automatically pick the Testnet host network if the enclave network is also Testnet."})}),"\n",(0,n.jsx)(o.p,{children:"Autoswitch supports the following networks:"}),"\n",(0,n.jsxs)(o.ul,{children:["\n",(0,n.jsx)(o.li,{children:(0,n.jsx)(o.code,{children:"ethereum"})}),"\n",(0,n.jsx)(o.li,{children:(0,n.jsx)(o.code,{children:"goerli"})}),"\n",(0,n.jsx)(o.li,{children:(0,n.jsx)(o.code,{children:"optimism"})}),"\n",(0,n.jsx)(o.li,{children:(0,n.jsx)(o.code,{children:"bsc"})}),"\n",(0,n.jsx)(o.li,{children:(0,n.jsx)(o.code,{children:"bsc-testnet"})}),"\n",(0,n.jsx)(o.li,{children:(0,n.jsx)(o.code,{children:"polygon"})}),"\n",(0,n.jsx)(o.li,{children:(0,n.jsx)(o.code,{children:"fantom"})}),"\n",(0,n.jsx)(o.li,{children:(0,n.jsx)(o.code,{children:"fantom-testnet"})}),"\n",(0,n.jsx)(o.li,{children:(0,n.jsx)(o.code,{children:"moonriver"})}),"\n",(0,n.jsx)(o.li,{children:(0,n.jsx)(o.code,{children:"arbitrum-one"})}),"\n",(0,n.jsx)(o.li,{children:(0,n.jsx)(o.code,{children:"arbitrum-nova"})}),"\n",(0,n.jsx)(o.li,{children:(0,n.jsx)(o.code,{children:"sapphire"})}),"\n",(0,n.jsx)(o.li,{children:(0,n.jsx)(o.code,{children:"sapphire-testnet"})}),"\n",(0,n.jsx)(o.li,{children:(0,n.jsx)(o.code,{children:"polygon-mumbai"})}),"\n",(0,n.jsx)(o.li,{children:(0,n.jsx)(o.code,{children:"avalanche"})}),"\n",(0,n.jsx)(o.li,{children:(0,n.jsx)(o.code,{children:"avalanche-fuji"})}),"\n",(0,n.jsx)(o.li,{children:(0,n.jsx)(o.code,{children:"arbitrum-testnet"})}),"\n"]}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-solidity",children:'    constructor(address dao) Enclave(dao, autoswitch("bsc")) {\n        registerEndpoint("createBallot", _oplCreateBallot);\n    }\n'})}),"\n",(0,n.jsx)(o.h4,{id:"event",children:"Event"}),"\n",(0,n.jsxs)(o.p,{children:["Closing a ballot has an effect on the host chain network (",(0,n.jsx)(o.code,{children:"postMessage()"}),"):"]}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-solidity",children:'    function _closeBallot(ProposalId _proposalId, Ballot storage _ballot) internal {\n        uint256 topChoice;\n        uint256 topChoiceCount;\n        for (uint8 i; i < _ballot.params.numChoices; ++i) {\n            uint256 choiceVoteCount = _ballot.voteCounts[i] & (type(uint256).max >> 1);\n            if (choiceVoteCount > topChoiceCount) {\n                topChoice = i;\n                topChoiceCount = choiceVoteCount;\n            }\n        }\n        postMessage("ballotClosed", abi.encode(_proposalId, topChoice));\n        emit BallotClosed(_proposalId, topChoice);\n        delete _ballots[_proposalId];\n    }\n'})}),"\n",(0,n.jsx)(o.h4,{id:"private",children:"Private"}),"\n",(0,n.jsxs)(o.p,{children:["The private variable ",(0,n.jsx)(o.code,{children:"_ballots"})," is encrypted on Sapphire."]}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-solidity",children:"    mapping(ProposalId => Ballot) private _ballots;\n"})})]})}function p(e={}){const{wrapper:o}={...(0,l.R)(),...e.components};return o?(0,n.jsx)(o,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},8453:(e,o,t)=>{t.d(o,{R:()=>s,x:()=>a});var n=t(6540);const l={},i=n.createContext(l);function s(e){const o=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function a(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:s(e.components),n.createElement(i.Provider,{value:o},e.children)}}}]);