"use strict";(self.webpackChunkdocs_oasis_io=self.webpackChunkdocs_oasis_io||[]).push([[7162],{3049:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>h});var a=t(4848),s=t(8453),i=t(5965),r=t(6116);const o={description:"Guide to creating secure dApps on Sapphire"},c="Guide",l={id:"dapp/sapphire/guide",title:"Guide",description:"Guide to creating secure dApps on Sapphire",source:"@site/docs/dapp/sapphire/guide.mdx",sourceDirName:"dapp/sapphire",slug:"/dapp/sapphire/guide",permalink:"/dapp/sapphire/guide",draft:!1,unlisted:!1,editUrl:"https://github.com/oasisprotocol/sapphire-paratime/edit/main/docs/guide.mdx",tags:[],version:"current",lastUpdatedAt:1723018842e3,frontMatter:{description:"Guide to creating secure dApps on Sapphire"},sidebar:"developers",previous:{title:"Quickstart",permalink:"/dapp/sapphire/quickstart"},next:{title:"Browser Support",permalink:"/dapp/sapphire/browser"}},d={},h=[{value:"Oasis Consensus Layer and Sapphire ParaTime",id:"oasis-consensus-layer-and-sapphire-paratime",level:2},{value:"Testnet and Mainnet",id:"testnet-and-mainnet",level:2},{value:"Sapphire vs Ethereum",id:"sapphire-vs-ethereum",level:2},{value:"Encrypted Contract State",id:"encrypted-contract-state",level:3},{value:"End-to-End Encrypted Transactions and Calls",id:"end-to-end-encrypted-transactions-and-calls",level:3},{value:"<code>from</code> Address is Zero for Unsigned Calls",id:"from-address-is-zero-for-unsigned-calls",level:3},{value:"Override <code>receive</code> and <code>fallback</code> when Funding the Contract",id:"override-receive-and-fallback-when-funding-the-contract",level:3},{value:"Instant Finality",id:"instant-finality",level:3},{value:"Integrating Sapphire",id:"integrating-sapphire",level:2},{value:"Writing Secure dApps",id:"writing-secure-dapps",level:2},{value:"Wallets",id:"wallets",level:3},{value:"Languages &amp; Frameworks",id:"languages--frameworks",level:3},{value:"Transactions &amp; Calls",id:"transactions--calls",level:3},{value:"Contract State",id:"contract-state",level:3},{value:"Contract Logs",id:"contract-logs",level:3},{value:"Contract Verification",id:"contract-verification",level:2},{value:"Running a Private Oasis Network Locally",id:"running-a-private-oasis-network-locally",level:2},{value:"See also",id:"see-also",level:2}];function p(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components},{Details:o}=n;return o||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"guide",children:"Guide"}),"\n",(0,a.jsxs)(n.p,{children:["This page mainly describes the differences between Sapphire and Ethereum\nsince there are a number of excellent tutorials on developing for Ethereum.\nIf you don't know where to begin, the ",(0,a.jsx)(n.a,{href:"https://hardhat.org/tutorial",children:"Hardhat tutorial"}),", ",(0,a.jsx)(n.a,{href:"https://docs.soliditylang.org/en/v0.8.15/solidity-by-example.html",children:"Solidity docs"}),", and\n",(0,a.jsx)(n.a,{href:"/dapp/emerald/writing-dapps-on-emerald",children:"Emerald dApp tutorial"})," are great places to start. You can continue following\nthis guide once you've set up your development environment and have deployed\nyour contract to a non-confidential EVM network (e.g., Ropsten, Emerald)."]}),"\n",(0,a.jsx)(n.h2,{id:"oasis-consensus-layer-and-sapphire-paratime",children:"Oasis Consensus Layer and Sapphire ParaTime"}),"\n",(0,a.jsxs)(n.p,{children:["The Oasis Network consists of the consensus layer and a number of ParaTimes.\nParaTimes are independent replicated state machines that settle transactions\nusing the consensus layer (to learn more, check the ",(0,a.jsx)(n.a,{href:"/general/oasis-network/",children:"Oasis Network\nOverview"}),"). Sapphire is a ParaTime which implements the\nEthereum Virtual Machine (EVM)."]}),"\n",(0,a.jsxs)(n.p,{children:["The minimum and also expected block time in Sapphire is ",(0,a.jsx)(n.strong,{children:"6 seconds"}),". Any\nSapphire transaction will require at least this amount of time to be executed,\nand probably no more."]}),"\n",(0,a.jsxs)(n.p,{children:["ParaTimes, Sapphire included, are not allowed to directly access your tokens\nstored in consensus layer accounts. You will need to ",(0,a.jsx)(n.em,{children:"deposit"})," tokens from your\nconsensus account to Sapphire. Consult the ",(0,a.jsx)(n.a,{href:"/general/manage-tokens/#rose-and-the-paratimes",children:"Manage your\nTokens"})," chapter to learn more."]}),"\n",(0,a.jsx)(n.h2,{id:"testnet-and-mainnet",children:"Testnet and Mainnet"}),"\n",(0,a.jsx)(n.p,{children:"Sapphire is deployed on Testnet and Mainnet chains. Testnet should be\nconsidered unstable software and may also have its state wiped at any time. As\nthe name implies, only use Testnet for testing unless you're testing how\nangry your users get when state is wiped."}),"\n",(0,a.jsxs)(n.admonition,{title:"Never deploy production services on Testnet",type:"danger",children:[(0,a.jsxs)(n.p,{children:["Because Testnet state can be wiped in the future, you should ",(0,a.jsx)(n.strong,{children:"never"})," deploy a\nproduction service on Testnet! Just don't do it!"]}),(0,a.jsxs)(n.p,{children:["Also note that while Testnet does use proper TEEs, due to experimental\nsoftware and different security parameters, ",(0,a.jsx)(n.strong,{children:"confidentiality of Sapphire on\nTestnet is not guaranteed"})," -- all transactions and state published on the\nSapphire Testnet should be considered public."]})]}),"\n",(0,a.jsx)(n.admonition,{type:"tip",children:(0,a.jsxs)(n.p,{children:["For testing purposes, visit our ",(0,a.jsx)(n.a,{href:"https://faucet.testnet.oasis.io/",children:"Testnet faucet"})," to obtain some TEST which you\ncan then use on the Sapphire Testnet to pay for gas fees. The faucet supports\nsending TEST both to your consensus layer address or to your address inside the\nParaTime."]})}),"\n",(0,a.jsx)(n.h2,{id:"sapphire-vs-ethereum",children:"Sapphire vs Ethereum"}),"\n",(0,a.jsxs)(n.p,{children:["Sapphire is generally compatible with Ethereum, the EVM, and all the user and\ndeveloper tooling that you are used to. In addition to confidentiality\nfeatures, you get a few extra benefits including the ability to ",(0,a.jsx)(n.strong,{children:"generate\nprivate entropy"}),", and ",(0,a.jsx)(n.strong,{children:"make signatures on-chain"}),". An example of a dApp that\nuses both is an HSM contract that generates an Ethereum wallet and signs\ntransactions sent to it via transactions."]}),"\n",(0,a.jsx)(n.p,{children:"There are also a few breaking changes compared to Ethereum though, but we think\nthat you'll quickly grasp them:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"#encrypted-contract-state",children:"Encrypted Contract State"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"#end-to-end-encrypted-transactions-and-calls",children:"End-to-End Encrypted Transactions and Calls"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsxs)(n.a,{href:"#from-address-is-zero-for-unsigned-calls",children:[(0,a.jsx)(n.code,{children:"from"})," Address is Zero for Unsigned Calls"]})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsxs)(n.a,{href:"#override-receive-and-fallback-when-funding-the-contract",children:["Override ",(0,a.jsx)(n.code,{children:"receive"})," and ",(0,a.jsx)(n.code,{children:"fallback"})," when Funding the Contract"]})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"#instant-finality",children:"Instant Finality"})}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Read below to learn more about them. Otherwise, Sapphire is like Emerald, a\nfast, cheap Ethereum."}),"\n",(0,a.jsx)(n.h3,{id:"encrypted-contract-state",children:"Encrypted Contract State"}),"\n",(0,a.jsxs)(n.p,{children:["The contract state is only visible to the contract that wrote it. With respect\nto the contract API, it's as if all state variables are declared as ",(0,a.jsx)(n.code,{children:"private"}),",\nbut with the further restriction that not even full nodes can read the values.\nPublic or access-controlled values are provided instead through explicit\ngetters."]}),"\n",(0,a.jsxs)(n.p,{children:["Calling ",(0,a.jsx)(n.code,{children:"eth_getStorageAt()"})," will return zero."]}),"\n",(0,a.jsx)(n.h3,{id:"end-to-end-encrypted-transactions-and-calls",children:"End-to-End Encrypted Transactions and Calls"}),"\n",(0,a.jsx)(n.p,{children:"Transactions and calls are end-to-end encrypted into the contract. Only the\ncaller and the contract can see the data sent to/received from the ParaTime.\nThis ends up defeating some utility of block explorers, however."}),"\n",(0,a.jsx)(n.p,{children:"The status of the transaction is public and so are the error code, the revert\nmessage and logs (emitted events)."}),"\n",(0,a.jsxs)(n.h3,{id:"from-address-is-zero-for-unsigned-calls",children:[(0,a.jsx)(n.code,{children:"from"})," Address is Zero for Unsigned Calls"]}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"from"})," address using of calls is derived from a signature attached to the\ncall. Unsigned calls have their sender set to the zero address. This allows\ncontract authors to write getters that release secrets to authenticated callers\n(e.g. by checking the ",(0,a.jsx)(n.code,{children:"msg.sender"})," value), but without requiring a transaction\nto be posted on-chain."]}),"\n",(0,a.jsxs)(n.h3,{id:"override-receive-and-fallback-when-funding-the-contract",children:["Override ",(0,a.jsx)(n.code,{children:"receive"})," and ",(0,a.jsx)(n.code,{children:"fallback"})," when Funding the Contract"]}),"\n",(0,a.jsx)(n.p,{children:"In Ethereum, you can fund a contract by sending Ether along the transaction in\ntwo ways:"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["a transaction must call a ",(0,a.jsx)(n.em,{children:"payable"})," function in the contract, or"]}),"\n",(0,a.jsxs)(n.li,{children:["not calling any specific function (i.e. empty ",(0,a.jsx)(n.em,{children:"calldata"}),"). In this case,\nthe payable ",(0,a.jsx)(n.code,{children:"receive()"})," and/or ",(0,a.jsx)(n.code,{children:"fallback()"})," functions need to be defined in\nthe contract. If no such functions exist, the transaction will revert."]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"The behavior described above is the same in Sapphire when using EVM transactions\nto fund a contract."}),"\n",(0,a.jsxs)(n.p,{children:["However, the Oasis Network also uses ",(0,a.jsx)(n.a,{href:"/general/manage-tokens/",children:"Oasis-native transactions"})," such as a\ndeposit to a ParaTime account or a transfer. In this case, ",(0,a.jsxs)(n.strong,{children:["you will be able to\nfund the contract's account even though the contract may not implement payable\n",(0,a.jsx)(n.code,{children:"receive()"})," or ",(0,a.jsx)(n.code,{children:"fallback()"}),"!"]})," Or, if these functions do exist, ",(0,a.jsx)(n.strong,{children:"they will not\nbe triggered"}),". You can send such Oasis-native transactions by using the ",(0,a.jsx)(n.a,{href:"/general/manage-tokens/cli/",children:"Oasis\nCLI"})," for example."]}),"\n",(0,a.jsx)(n.h3,{id:"instant-finality",children:"Instant Finality"}),"\n",(0,a.jsx)(n.p,{children:"The Oasis Network is a proof of stake network where 2/3+ of the validator nodes\nneed to verify each block in order to consider it final. However, in Ethereum\nthe signatures of those validator nodes can be submitted minutes after the block\nis proposed, which makes the block proposal mechanism independent of the\nvalidation, but adds uncertainty if and when will the proposed block actually be\nfinalized."}),"\n",(0,a.jsxs)(n.p,{children:["In the Oasis Network, the 2/3+ of signatures need to be provided immediately\nafter the block is proposed and ",(0,a.jsx)(n.strong,{children:"the network will halt, until the required\nnumber signatures are provided"}),". This means that you can rest assured that any\nvalidated block is final. As a consequence, the cross-chain bridges are more\nresponsive yet safe on the Oasis Network."]}),"\n",(0,a.jsx)(n.h2,{id:"integrating-sapphire",children:"Integrating Sapphire"}),"\n",(0,a.jsxs)(n.p,{children:["Once ROSE tokens are ",(0,a.jsx)(n.a,{href:"/general/manage-tokens/#rose-and-the-paratimes",children:"deposited into Sapphire"}),", it should\nbe painless for users to begin using dApps. To achieve this ideal user\nexperience, we have to modify the dApp a little, but it's made simple by our\ncompatibility library, ",(0,a.jsx)(n.a,{href:"https://www.npmjs.com/package/@oasisprotocol/sapphire-paratime",children:"@oasisprotocol/sapphire-paratime"}),"."]}),"\n",(0,a.jsxs)(n.p,{children:["There are compatibility layers in other languages, which may be found in ",(0,a.jsx)(n.a,{href:"https://github.com/oasisprotocol/sapphire-paratime/tree/main/clients",children:"the repo"}),"."]}),"\n",(0,a.jsx)(n.h2,{id:"writing-secure-dapps",children:"Writing Secure dApps"}),"\n",(0,a.jsx)(n.h3,{id:"wallets",children:"Wallets"}),"\n",(0,a.jsx)(n.p,{children:"Sapphire is compatible with popular self-custodial wallets including MetaMask,\nLedger, Brave, and so forth. You can also use libraries like Ethers and Viem\nto create programmatic wallets. In general, if it generates secp256k1 signatures,\nit'll work just fine."}),"\n",(0,a.jsx)(n.h3,{id:"languages--frameworks",children:"Languages & Frameworks"}),"\n",(0,a.jsxs)(n.p,{children:["Sapphire is programmable using any language that targets the EVM, such as Solidity\nor Vyper. If you prefer to use an Ethereum framework like Hardhat or Foundry, you\ncan also use those with Sapphire; all you need to do is set your Web3 gateway URL.\nYou can find the details of the Oasis Sapphire Web3 endpoints\n",(0,a.jsx)(n.a,{href:"/dapp/sapphire/#rpc-endpoints",children:"here"}),"."]}),"\n",(0,a.jsx)(n.h3,{id:"transactions--calls",children:"Transactions & Calls"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"Client, Key Manager, Compute Node diagram",src:t(695).A+""})}),"\n",(0,a.jsxs)(n.p,{children:["The figure above illustrates the flow of a ",(0,a.jsx)(n.strong,{children:"confidential smart contract\ntransaction"})," on Sapphire."]}),"\n",(0,a.jsxs)(n.p,{children:["Transactions and calls must be encrypted and signed for maximum security.\nThe ",(0,a.jsx)(n.a,{href:"https://www.npmjs.com/package/@oasisprotocol/sapphire-paratime",children:"@oasisprotocol/sapphire-paratime"})," npm package will make your life\neasy. It'll handle cryptography and signing for you."]}),"\n",(0,a.jsxs)(n.p,{children:["You should be aware that taking actions based on the value of private data may\n",(0,a.jsx)(n.strong,{children:"leak the private data through side channels"})," like time spent, gas use and\naccessed memory locations. If you need to branch on private data, you should in\nmost cases ensure that both branches exhibit the same time/gas and storage\npatterns."]}),"\n",(0,a.jsxs)(n.p,{children:["You can also make ",(0,a.jsx)(n.strong,{children:"confidential smart contract calls"})," on Sapphire. If you\nuse ",(0,a.jsx)(n.code,{children:"msg.sender"})," for access control in your contract, the call ",(0,a.jsx)(n.strong,{children:"must be\nsigned"}),", otherwise ",(0,a.jsx)(n.code,{children:"msg.sender"})," will be zeroed. On the other hand, set the\n",(0,a.jsx)(n.code,{children:"from"})," address to all zeros, if you want to avoid annoying signature popups in\nthe user's wallet for calls that do not need to be signed. The JS library will\ndo this for you."]}),"\n",(0,a.jsx)(n.admonition,{type:"note",children:(0,a.jsx)(n.p,{children:"Inside the smart contract code, there is no way of knowing whether the\nclient's call data were originally encrypted or not."})}),"\n",(0,a.jsxs)(o,{children:[(0,a.jsx)("summary",{children:"Detailed confidential smart contract transaction flow on Sapphire"}),(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"Diagram of the detailed confidential smart contract transaction flow on Sapphire",src:t(4807).A+"",width:"1087",height:"4156"})})]}),"\n",(0,a.jsxs)(o,{children:[(0,a.jsx)("summary",{children:"Detailed confidential smart contract call flow on Sapphire"}),(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"Diagram of the detailed confidential smart contract call flow on Sapphire",src:t(6119).A+"",width:"1087",height:"3798"})})]}),"\n",(0,a.jsx)(n.h3,{id:"contract-state",children:"Contract State"}),"\n",(0,a.jsxs)(n.p,{children:["The Sapphire state model is like Ethereum's except for all state being encrypted\nand not accessible to anyone except the contract. The contract, executing in an\nactive (attested) Oasis compute node is the only entity that can request its\nstate encryption key from the Oasis key manager. Both the keys and values of the\nitems stored in state are encrypted, but the ",(0,a.jsx)(n.strong,{children:"size of either is not hidden"}),". Your\napp may need to pad state items to a constant length, or use other obfuscation.\nObservers may also be able to infer computation based on storage access patterns,\nso you may need to obfuscate that, too. See ",(0,a.jsx)(n.a,{href:"/dapp/sapphire/security#storage-access-patterns",children:"Security chapter"})," for more\nrecommendations."]}),"\n",(0,a.jsx)(n.admonition,{title:"Contract state leaks a fine-grained access pattern",type:"danger",children:(0,a.jsx)(n.p,{children:"Contract state is backed by an encrypted key-value store. However, the trace of\nencrypted records is leaked to the compute node. As a concrete example, an ERC-20\ntoken transfer would leak which encrypted record is for the sender's account\nbalance and which is for the receiver's account balance. Such a token would be\ntraceable from sender address to receiver address. Obfuscating the storage access\npatterns may be done by using an ORAM implementation."})}),"\n",(0,a.jsx)(n.p,{children:"Contract state may be made available to third parties through logs/events, or\nexplicit getters."}),"\n",(0,a.jsx)(n.h3,{id:"contract-logs",children:"Contract Logs"}),"\n",(0,a.jsxs)(n.p,{children:["Contract logs/events (e.g., those emitted by the Solidity ",(0,a.jsx)(n.code,{children:"emit"})," keyword)\nare exactly like Ethereum. Data contained in events is ",(0,a.jsx)(n.em,{children:"not"})," encrypted.\nPrecompiled contracts are available to help you encrypt data that you can\nthen pack into an event, however."]}),"\n",(0,a.jsx)(n.admonition,{title:"Unmodified contracts may leak state through logs",type:"danger",children:(0,a.jsxs)(n.p,{children:["Base contracts like those provided by OpenZeppelin often emit logs containing\nprivate information. If you don't know they're doing that, you might undermine\nthe confidentiality of your state. As a concrete example, the ERC-20 spec\nrequires implementers to emit an ",(0,a.jsx)(n.code,{children:"event Transfer(from, to, amount)"}),", which is\nobviously problematic if you're writing a confidential token. What you can\ndo instead is fork that contract and remove the offending emissions."]})}),"\n",(0,a.jsx)(n.h2,{id:"contract-verification",children:"Contract Verification"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.a,{href:"https://sourcify.dev/",children:"Sourcify"})," is the preferred service for the ",(0,a.jsx)(n.a,{href:"https://ethereum.org/en/developers/docs/smart-contracts/verifying/",children:"verification of smart\ncontracts"})," deployed on Sapphire. Make sure you have\nthe ",(0,a.jsx)(n.strong,{children:"address of each deployed contract"})," available (your deployment scripts\nshould report those) and the ",(0,a.jsx)(n.strong,{children:"contracts JSON metadata file"})," generated when\ncompiling contracts (Hardhat stores it inside the ",(0,a.jsx)(n.code,{children:"artifacts/build-info"})," folder\nand names it as a 32-digit hex number). If your project contains multiple\ncontracts, you will need to verify each contract separately."]}),"\n",(0,a.jsxs)(n.admonition,{title:"Contract deployment encryption",type:"warning",children:[(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Do not deploy your contract with an encrypted contract deployment transaction,\nif you want to verify it."})," For example, if your ",(0,a.jsx)(n.code,{children:"hardhat.config.ts"}),"\nor deployment script contains ",(0,a.jsx)(n.code,{children:"import '@oasisprotocol/sapphire-hardhat'"})," or\n",(0,a.jsx)(n.code,{children:"import '@oasisprotocol/sapphire-paratime'"})," lines at the beginning, you should\ncomment those out for the deployment."]}),(0,a.jsxs)(n.p,{children:["Verification services will try to match the contract deployment transaction code\nwith the one in the provided contract's metadata and since the transaction was\nencrypted with an ephemeral ParaTime key, the verification service will not be\nable to decrypt it. Some services may extract the contract's bytecode from the\nchain directly by calling ",(0,a.jsx)(n.code,{children:"eth_getCode"})," RPC, but this will not work correctly\nfor contracts with immutable variables."]})]}),"\n",(0,a.jsx)(n.p,{children:"To verify a contract deployed on Sapphire Mainnet or Testnet:"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["Visit the ",(0,a.jsx)(n.a,{href:"https://sourcify.dev/",children:"Sourcify"}),' website and hit the "VERIFY CONTRACT" button.']}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"Sourcify website",src:t(1023).A+"",width:"1564",height:"979"})}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Upload the contracts JSON metadata file."}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"Sourcify: Upload metadata JSON file",src:t(6372).A+"",width:"1564",height:"979"})}),"\n",(0,a.jsx)(n.admonition,{title:"Store your metadata files",type:"tip",children:(0,a.jsxs)(n.p,{children:["For production deployments, it is generally a good idea to ",(0,a.jsx)(n.strong,{children:"archive your\ncontract metadata JSON file"})," since it is not only useful for the\nverification, but contains a copy of all the source files, produced bytecode,\nan ABI, compiler and other relevant contract-related settings that may be\nuseful in the future. Sourcify will store the metadata file for you and will\neven make it available via IPFS, but it is still a good idea to store it\nyourself."]})}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:'Sourcify will decode the metadata and prepare a list of included contracts on\nthe right. Enter the address of the specific contract and select the "Oasis\nSapphire" or "Oasis Sapphire Testnet" chain for Mainnet or Testnet\naccordingly. If your contract assigns any immutable variables in the\nconstructor, you will also need to correctly fill those out under the "More\nInputs (optional)" panel. Finally, click on the "Verify" button.'}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"Sourcify: Verify contract",src:t(2669).A+"",width:"1564",height:"2420"})}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["If everything goes well, you will get a ",(0,a.jsx)(n.em,{children:"Perfect match"})," notice and your\ncontract is now verified. Congratulations!"]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["In case of a ",(0,a.jsx)(n.em,{children:"Partial match"}),", the contracts metadata JSON differs from the one\nused for deployment although the compiled contract bytecode matched. Make sure\nthe source code ",(0,a.jsx)(n.code,{children:".sol"})," file of the contract is the same as the one used during the\ndeployment (including the comments, variable names and source code file\nnames) and use the same version of Hardhat and solc compiler."]}),"\n",(0,a.jsxs)(n.p,{children:["You can also explore other verification methods on Sourcify by reading the\n",(0,a.jsx)(n.a,{href:"https://docs.sourcify.dev/docs/how-to-verify/",children:"official Sourcify contract verification instructions"}),"."]}),"\n",(0,a.jsx)(n.h2,{id:"running-a-private-oasis-network-locally",children:"Running a Private Oasis Network Locally"}),"\n",(0,a.jsxs)(n.p,{children:["For convenient development and testing of your dApps the Oasis team prepared\nthe ",(0,a.jsx)(n.a,{href:"https://github.com/oasisprotocol/oasis-web3-gateway/pkgs/container/sapphire-localnet",children:"ghcr.io/oasisprotocol/sapphire-localnet"})," Docker image\nwhich brings you a complete Oasis network stack to your desktop. The Localnet\nSapphire instance ",(0,a.jsx)(n.strong,{children:"mimics confidential transactions"}),", but it does not run in a\ntrusted execution environment nor does it require Intel's SGX on your computer.\nThe network is isolated from the Mainnet or Testnet and consists of a:"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"single Oasis validator node with 1-second block time and 30-second epoch,"}),"\n",(0,a.jsx)(n.li,{children:"single Oasis client node,"}),"\n",(0,a.jsx)(n.li,{children:"single compute node running Oasis Sapphire,"}),"\n",(0,a.jsx)(n.li,{children:"single key manager node,"}),"\n",(0,a.jsx)(n.li,{children:"PostgreSQL instance,"}),"\n",(0,a.jsx)(n.li,{children:"Oasis Web3 gateway with transaction indexer and enabled Oasis RPCs,"}),"\n",(0,a.jsx)(n.li,{children:"helper script which populates the account(s) for you."}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"To run the image, execute:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:"docker run -it -p8545:8545 -p8546:8546 ghcr.io/oasisprotocol/sapphire-localnet\n"})}),"\n",(0,a.jsx)(n.p,{children:"After a while, the tool will show you something like this:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"sapphire-localnet 2024-05-28-git37b7166 (oasis-core: 24.0-gitfb49717, sapphire-paratime: 0.7.3-testnet, oasis-web3-gateway: 5.1.0)\n\n * Starting oasis-net-runner with sapphire...\n * Waiting for Postgres to start...\n * Waiting for Oasis node to start.....\n * Starting oasis-web3-gateway...\n * Bootstrapping network (this might take a minute)...\n * Waiting for key manager......\n * Populating accounts...\n\nAvailable Accounts\n==================\n(0) 0x41b0C13e747F8Cb1c4E980712504437cb1792327 (10000 TEST)\n(1) 0xa521f94f8a38b1d027D526017EB229327B9D6cA0 (10000 TEST)\n(2) 0x1e0f8369215D6C5Af5E14eD6A0D6ae7372776A79 (10000 TEST)\n(3) 0xB60cA28B491747a27C057AdBF3E71F3CCC52332C (10000 TEST)\n(4) 0x88D7d924e521a6d07008a373D5b33281148ffEDc (10000 TEST)\n\nPrivate Keys\n==================\n(0) 0x617346c545d62b8213ea907acf1b570a7405683e2c6dcaf963fc21fd677e0c56\n(1) 0xf82d6e09208b0bd44a397f7e73b05c564e6c9f70b151ee7677e2bb8d6ce5d882\n(2) 0xeb2f21d20086f3dd6bfe7184dad1cb8b0fb802f27b1334e836a19eda0a43a1c2\n(3) 0x82b0203d6063992b1052004b90411c45d4f3afab696346f006e74c6abd8f855e\n(4) 0x7179c6e1add3a2993822653b9c98fe606f47fb6d4c0d0d81b31b067cf6bb5f83\n\nHD Wallet\n==================\nMnemonic:       coach genre beach child crunch champion tell adult critic peace canoe stable\nBase HD Path:   m/44'/60'/0'/0/%d\n\nWARNING: The chain is running in ephemeral mode. State will be lost after restart!\n\n * Listening on http://localhost:8545 and ws://localhost:8546. Chain ID: 0x5afd\n * Container start-up took 66 seconds, node log level is set to warn.\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Those familiar with local dApp environments will find the output above similar\nto ",(0,a.jsx)(n.code,{children:"geth --dev"})," or ",(0,a.jsx)(n.code,{children:"ganache-cli"})," commands or the ",(0,a.jsx)(n.code,{children:"geth-dev-assistant"})," npm\npackage. ",(0,a.jsx)(n.a,{href:"https://github.com/oasisprotocol/oasis-web3-gateway/pkgs/container/sapphire-localnet",children:"sapphire-localnet"})," will spin up a private Oasis Network locally,\ngenerate and populate test accounts and make the following Web3 endpoints\navailable for you to use:"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.code,{children:"http://localhost:8545"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.code,{children:"ws://localhost:8546"})}),"\n"]}),"\n",(0,a.jsxs)(n.admonition,{type:"tip",children:[(0,a.jsxs)(n.p,{children:["If you prefer using the same mnemonics each time (e.g. for testing purposes)\nor to populate just a single account, use ",(0,a.jsx)(n.code,{children:"-to"})," flag and pass the mnemonics or\nthe wallet addresses. By passing the ",(0,a.jsx)(n.code,{children:"-test-mnemonic"})," flag you can fund the\nstandard test accounts provided by the ",(0,a.jsx)(n.code,{children:"hardhat node"})," commmand and that are\ntypically used for solidity unit tests."]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:'docker run -it -p8545:8545 -p8546:8546 ghcr.io/oasisprotocol/sapphire-localnet -to "bench remain brave curve frozen verify dream margin alarm world repair innocent" -n3\ndocker run -it -p8545:8545 -p8546:8546 ghcr.io/oasisprotocol/sapphire-localnet -to "0x75eCF0d4496C2f10e4e9aF3D4d174576Ee9010E2,0xbDA5747bFD65F08deb54cb465eB87D40e51B197E"\ndocker run -it -p8545:8545 -p8546:8546 ghcr.io/oasisprotocol/sapphire-localnet -test-mnemonic\n'})})]}),"\n",(0,a.jsxs)(n.admonition,{title:"Running on Apple M chips",type:"note",children:[(0,a.jsxs)(n.p,{children:["There is currently no ",(0,a.jsx)(n.code,{children:"arm64"})," build available for M Macs, so you will need to\nforce the docker image to use the ",(0,a.jsx)(n.code,{children:"linux/x86_64"})," platform, like this:"]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:"docker run -it -p8545:8545 -p8546:8546 --platform linux/x86_64 ghcr.io/oasisprotocol/sapphire-localnet\n"})})]}),"\n",(0,a.jsx)(n.admonition,{type:"danger",children:(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.a,{href:"https://github.com/oasisprotocol/oasis-web3-gateway/pkgs/container/sapphire-localnet",children:"sapphire-localnet"})," runs in ephemeral mode. Any smart contract and wallet balance\nwill be lost after you quit the Docker container!"]})}),"\n",(0,a.jsx)(n.h2,{id:"see-also",children:"See also"}),"\n",(0,a.jsx)(i.A,{item:(0,r.$)("/node/run-your-node/paratime-client-node")}),"\n",(0,a.jsx)(i.A,{item:(0,r.$)("/node/web3")})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}},5965:(e,n,t)=>{t.d(n,{A:()=>g});t(6540);var a=t(4164),s=t(8774),i=t(4142),r=t(5846),o=t(6654),c=t(1312),l=t(1107);const d={cardContainer:"cardContainer_fWXF",cardTitle:"cardTitle_rnsV",cardDescription:"cardDescription_PWke"};var h=t(4848);function p(e){let{href:n,children:t}=e;return(0,h.jsx)(s.A,{href:n,className:(0,a.A)("card padding--lg",d.cardContainer),children:t})}function u(e){let{href:n,icon:t,title:s,description:i}=e;return(0,h.jsxs)(p,{href:n,children:[(0,h.jsxs)(l.A,{as:"h2",className:(0,a.A)("text--truncate",d.cardTitle),title:s,children:[t," ",s]}),i&&(0,h.jsx)("p",{className:(0,a.A)("text--truncate",d.cardDescription),title:i,children:i})]})}function m(e){let{item:n}=e;const t=(0,i.Nr)(n),a=function(){const{selectMessage:e}=(0,r.W)();return n=>e(n,(0,c.T)({message:"{count} items",id:"theme.docs.DocCard.categoryDescription.plurals",description:"The default description for a category card in the generated index about how many items this category includes"},{count:n}))}();return t?(0,h.jsx)(u,{href:t,icon:"\ud83d\uddc3\ufe0f",title:n.label,description:n.description??a(n.items.length)}):null}function f(e){let{item:n}=e;const t=(0,o.A)(n.href)?"\ud83d\udcc4\ufe0f":"\ud83d\udd17",a=(0,i.cC)(n.docId??void 0);return(0,h.jsx)(u,{href:n.href,icon:t,title:n.label,description:n.description??a?.description})}function g(e){let{item:n}=e;switch(n.type){case"link":return(0,h.jsx)(f,{item:n});case"category":return(0,h.jsx)(m,{item:n});default:throw new Error(`unknown item type ${JSON.stringify(n)}`)}}},5846:(e,n,t)=>{t.d(n,{W:()=>l});var a=t(6540),s=t(4586);const i=["zero","one","two","few","many","other"];function r(e){return i.filter((n=>e.includes(n)))}const o={locale:"en",pluralForms:r(["one","other"]),select:e=>1===e?"one":"other"};function c(){const{i18n:{currentLocale:e}}=(0,s.A)();return(0,a.useMemo)((()=>{try{return function(e){const n=new Intl.PluralRules(e);return{locale:e,pluralForms:r(n.resolvedOptions().pluralCategories),select:e=>n.select(e)}}(e)}catch(n){return console.error(`Failed to use Intl.PluralRules for locale "${e}".\nDocusaurus will fallback to the default (English) implementation.\nError: ${n.message}\n`),o}}),[e])}function l(){const e=c();return{selectMessage:(n,t)=>function(e,n,t){const a=e.split("|");if(1===a.length)return a[0];a.length>t.pluralForms.length&&console.error(`For locale=${t.locale}, a maximum of ${t.pluralForms.length} plural forms are expected (${t.pluralForms.join(",")}), but the message contains ${a.length}: ${e}`);const s=t.select(n),i=t.pluralForms.indexOf(s);return a[Math.min(i,a.length-1)]}(t,n,e)}}},6116:(e,n,t)=>{t.d(n,{$:()=>i});var a=t(2252);function s(e){for(const n of e){const e=n.href;e&&void 0===globalThis.sidebarItemsMap[e]&&(globalThis.sidebarItemsMap[e]=n),"category"===n.type&&s(n.items)}}function i(e){const n=(0,a.r)();if(!n)throw new Error("Unexpected: cant find docsVersion in current context");if(void 0===globalThis.sidebarItemsMap){globalThis.sidebarItemsMap={};for(const e in n.docsSidebars)s(n.docsSidebars[e])}if(void 0===globalThis.sidebarItemsMap[e])throw console.log("Registered sidebar items:"),console.log(globalThis.sidebarItemsMap),new Error("Unexpected: sidebar item with href "+e+" does not exist.");return globalThis.sidebarItemsMap[e]}},6119:(e,n,t)=>{t.d(n,{A:()=>a});const a=t.p+"assets/images/c10l-smart-contract-call.mmd-bba499f12d79733189ed91fd919480b9.svg"},4807:(e,n,t)=>{t.d(n,{A:()=>a});const a=t.p+"assets/images/c10l-smart-contract-tx.mmd-1979dfebd7f16fb909380088da1c7be2.svg"},1023:(e,n,t)=>{t.d(n,{A:()=>a});const a=t.p+"assets/images/sourcify1-898a49b3519501962fe80f3ba09314b1.png"},6372:(e,n,t)=>{t.d(n,{A:()=>a});const a=t.p+"assets/images/sourcify2-d95710724b0373068c2ac0f857e07928.png"},2669:(e,n,t)=>{t.d(n,{A:()=>a});const a=t.p+"assets/images/sourcify3-8be00790df0e04f4720273e6cde8a867.png"},695:(e,n,t)=>{t.d(n,{A:()=>a});const a=t.p+"assets/images/client-km-compute-e82d4c5748974134adbf78d76ca7bc03.svg"},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>o});var a=t(6540);const s={},i=a.createContext(s);function r(e){const n=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),a.createElement(i.Provider,{value:n},e.children)}}}]);